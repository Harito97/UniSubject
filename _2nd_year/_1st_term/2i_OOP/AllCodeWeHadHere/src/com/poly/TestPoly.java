package com.poly;

import java.util.ArrayList;
import java.util.List;

public class TestPoly {
    //Attributes
    List<Poly> polyList = new ArrayList<>();

    //Constructor
    public TestPoly(){

    }

    //APIs
    public static ArrayPoly createArrayPoly(int[] coeffArray){
        ArrayPoly arrayPoly = new ArrayPoly(coeffArray);
        return arrayPoly;
    }

    public static ListPoly createListPoly(int[] coeffArray){
        ListPoly listPoly = new ListPoly(coeffArray);
        return listPoly;
    }

    public static int[] createRandomArray(int degree){
        int[] coeff = new int[degree];
        double probability;
        for (int i = 0; i < degree; i++){
            probability = Math.random();
            if (probability < 0.5){
                coeff[i] = (int) (Math.random() * 1000);
            } else {
                coeff[i] = (int) (Math.random() * -1000);
            }
        }
        return coeff;
    }

    //Main test
    public static void main(String[] args) {
        TestPoly testPoly = new TestPoly();
        int[] coeff;
        for (int i = 0; i < 5; i++){
            coeff = createRandomArray((int) (Math.random() * 100));
            ArrayPoly arrayPoly = new ArrayPoly(coeff);
            if (arrayPoly != null) testPoly.polyList.add(arrayPoly);
        }
        for (int i = 0; i < 5; i++){
            coeff = createRandomArray((int) (Math.random() * 100));
            ListPoly listPoly = new ListPoly(coeff);
            if (listPoly != null) testPoly.polyList.add(listPoly);
        }

        for (int i = 1; i <= 10; i++){
            System.out.println("Poly " + i + ":");
            System.out.println(testPoly.polyList.get(i - 1).toString());
            System.out.println(testPoly.polyList.get(i - 1).derivative().toString());
            double x = Math.random() * 1000;
            System.out.println(x);
            System.out.println(testPoly.polyList.get(i - 1).evaluate(x));
            if (testPoly.polyList.get(i - 1) instanceof ArrayPoly){
                System.out.println(((ArrayPoly) testPoly.polyList.get(i - 1)).type());
            } else if (testPoly.polyList.get(i - 1) instanceof ListPoly){
                System.out.println(((ListPoly) testPoly.polyList.get(i - 1)).type());
            }
        }
    }
}
//    Poly 1:
//            - 229 - 405 * x^1 - 256 * x^2 + 323 * x^3 + 332 * x^4 + 291 * x^5 + 547 * x^6 - 900 * x^7 + 493 * x^8
//            - 405 - 512 * x^1 + 969 * x^2 + 1328 * x^3 + 1455 * x^4 + 3282 * x^5 - 6300 * x^6 + 3944 * x^7
//            382.1183179150691
//            -113489.14042077557
//    ArrayPoly
//    Poly 2:
//            - 37 + 928 * x^1 - 272 * x^2 + 400 * x^3 - 710 * x^4 - 424 * x^5 + 87 * x^6 + 73 * x^7 - 904 * x^8 + 540 * x^9 + 584 * x^10 + 987 * x^11 - 446 * x^12 - 903 * x^13 - 200 * x^14 - 744 * x^15 + 499 * x^16 - 599 * x^17 + 610 * x^18 - 878 * x^19 - 393 * x^20 - 358 * x^21 - 591 * x^22 + 413 * x^23 + 923 * x^24 + 967 * x^25 + 550 * x^26 + 493 * x^27 - 315 * x^28 - 395 * x^29 + 546 * x^30 - 216 * x^31 + 327 * x^32 + 440 * x^33 + 893 * x^34 + 81 * x^35 + 182 * x^36 - 881 * x^37 + 667 * x^38 - 676 * x^39 + 295 * x^40 - 433 * x^41 + 708 * x^42 + 519 * x^43 + 7 * x^44 - 4 * x^45 - 938 * x^46 - 180 * x^47 + 770 * x^48 + 34 * x^49 - 98 * x^50 + 93 * x^51 + 497 * x^52 + 940 * x^53 + 205 * x^54 - 692 * x^55 - 41 * x^56 - 916 * x^57 - 342 * x^58 + 769 * x^59 + 995 * x^60 - 638 * x^61 + 590 * x^62 - 204 * x^63 - 279 * x^64 - 615 * x^65 - 200 * x^66 - 451 * x^67 + 225 * x^68 + 221 * x^69 - 327 * x^70 + 432 * x^71 + 111 * x^72 - 675 * x^73 + 908 * x^74 - 733 * x^75 + 344 * x^76 + 488 * x^77 - 526 * x^78 - 242 * x^79 - 768 * x^80 - 147 * x^81 + 333 * x^82 + 631 * x^83 - 784 * x^84 + 48 * x^85 - 361 * x^86 + 317 * x^87 + 259 * x^88 - 963 * x^89 + 818 * x^90
//            928 - 544 * x^1 + 1200 * x^2 - 2840 * x^3 - 2120 * x^4 + 522 * x^5 + 511 * x^6 - 7232 * x^7 + 4860 * x^8 + 5840 * x^9 + 10857 * x^10 - 5352 * x^11 - 11739 * x^12 - 2800 * x^13 - 11160 * x^14 + 7984 * x^15 - 10183 * x^16 + 10980 * x^17 - 16682 * x^18 - 7860 * x^19 - 7518 * x^20 - 13002 * x^21 + 9499 * x^22 + 22152 * x^23 + 24175 * x^24 + 14300 * x^25 + 13311 * x^26 - 8820 * x^27 - 11455 * x^28 + 16380 * x^29 - 6696 * x^30 + 10464 * x^31 + 14520 * x^32 + 30362 * x^33 + 2835 * x^34 + 6552 * x^35 - 32597 * x^36 + 25346 * x^37 - 26364 * x^38 + 11800 * x^39 - 17753 * x^40 + 29736 * x^41 + 22317 * x^42 + 308 * x^43 - 180 * x^44 - 43148 * x^45 - 8460 * x^46 + 36960 * x^47 + 1666 * x^48 - 4900 * x^49 + 4743 * x^50 + 25844 * x^51 + 49820 * x^52 + 11070 * x^53 - 38060 * x^54 - 2296 * x^55 - 52212 * x^56 - 19836 * x^57 + 45371 * x^58 + 59700 * x^59 - 38918 * x^60 + 36580 * x^61 - 12852 * x^62 - 17856 * x^63 - 39975 * x^64 - 13200 * x^65 - 30217 * x^66 + 15300 * x^67 + 15249 * x^68 - 22890 * x^69 + 30672 * x^70 + 7992 * x^71 - 49275 * x^72 + 67192 * x^73 - 54975 * x^74 + 26144 * x^75 + 37576 * x^76 - 41028 * x^77 - 19118 * x^78 - 61440 * x^79 - 11907 * x^80 + 27306 * x^81 + 52373 * x^82 - 65856 * x^83 + 4080 * x^84 - 31046 * x^85 + 27579 * x^86 + 22792 * x^87 - 85707 * x^88 + 73620 * x^89
//            887.8205376055009
//            381762.8311703665
//    ArrayPoly
//    Poly 3:
//            - 924 + 512 * x^1 - 45 * x^2 + 962 * x^3 - 207 * x^4 + 55 * x^5 - 643 * x^6 + 784 * x^7 - 448 * x^8 + 375 * x^9 - 539 * x^10 + 204 * x^11 - 332 * x^12 + 614 * x^13 - 70 * x^14 + 404 * x^15 - 130 * x^16 - 250 * x^17 + 473 * x^18 + 666 * x^19 - 551 * x^20 - 447 * x^21 - 659 * x^22 - 681 * x^23 - 698 * x^24 - 548 * x^25 - 766 * x^26 + 110 * x^27 - 806 * x^28 - 221 * x^29 + 807 * x^30 - 492 * x^31 - 672 * x^32 + 976 * x^33 + 937 * x^34 - 871 * x^35 + 974 * x^36 - 58 * x^37 - 175 * x^38 - 761 * x^39 + 895 * x^40 + 940 * x^41 + 596 * x^42 - 296 * x^43 + 721 * x^44 + 918 * x^45 + 320 * x^46 - 693 * x^47 - 348 * x^48 + 532 * x^49 - 837 * x^50 - 389 * x^51 + 880 * x^52 + 813 * x^53 + 468 * x^54 + 457 * x^55 + 720 * x^56 + 593 * x^57 - 20 * x^58 - 169 * x^59 + 856 * x^60 + 353 * x^61 - 931 * x^62 - 831 * x^63 + 254 * x^64 + 367 * x^65 - 452 * x^66 - 224 * x^67 + 535 * x^68 - 118 * x^69 + 676 * x^70
//            512 - 90 * x^1 + 2886 * x^2 - 828 * x^3 + 275 * x^4 - 3858 * x^5 + 5488 * x^6 - 3584 * x^7 + 3375 * x^8 - 5390 * x^9 + 2244 * x^10 - 3984 * x^11 + 7982 * x^12 - 980 * x^13 + 6060 * x^14 - 2080 * x^15 - 4250 * x^16 + 8514 * x^17 + 12654 * x^18 - 11020 * x^19 - 9387 * x^20 - 14498 * x^21 - 15663 * x^22 - 16752 * x^23 - 13700 * x^24 - 19916 * x^25 + 2970 * x^26 - 22568 * x^27 - 6409 * x^28 + 24210 * x^29 - 15252 * x^30 - 21504 * x^31 + 32208 * x^32 + 31858 * x^33 - 30485 * x^34 + 35064 * x^35 - 2146 * x^36 - 6650 * x^37 - 29679 * x^38 + 35800 * x^39 + 38540 * x^40 + 25032 * x^41 - 12728 * x^42 + 31724 * x^43 + 41310 * x^44 + 14720 * x^45 - 32571 * x^46 - 16704 * x^47 + 26068 * x^48 - 41850 * x^49 - 19839 * x^50 + 45760 * x^51 + 43089 * x^52 + 25272 * x^53 + 25135 * x^54 + 40320 * x^55 + 33801 * x^56 - 1160 * x^57 - 9971 * x^58 + 51360 * x^59 + 21533 * x^60 - 57722 * x^61 - 52353 * x^62 + 16256 * x^63 + 23855 * x^64 - 29832 * x^65 - 15008 * x^66 + 36380 * x^67 - 8142 * x^68 + 47320 * x^69
//            297.84492872227963
//            824732.6076319924
//    ArrayPoly
//    Poly 4:
//            473 + 866 * x^1 + 534 * x^2 + 325 * x^3 - 232 * x^4 + 378 * x^5 + 387 * x^6 - 571 * x^7 + 807 * x^8 - 234 * x^9 - 961 * x^10 + 359 * x^11 + 198 * x^12 + 137 * x^13 - 53 * x^14 - 225 * x^15 - 874 * x^16 - 446 * x^17 + 873 * x^18 - 955 * x^19 + 722 * x^20 - 858 * x^21 + 962 * x^22 - 891 * x^23 - 835 * x^24 + 52 * x^25 - 638 * x^26 + 16 * x^27 - 297 * x^28 + 738 * x^29 + 719 * x^30 + 906 * x^31 - 351 * x^32 - 829 * x^33 + 551 * x^34 - 855 * x^35 + 600 * x^36 + 686 * x^37 + 604 * x^38 + 788 * x^39 - 136 * x^40 + 644 * x^41 + 164 * x^42 - 771 * x^43 + 734 * x^44 - 277 * x^45 + 885 * x^46 - 207 * x^47 - 513 * x^48 + 112 * x^49 - 218 * x^50 - 53 * x^51 - 709 * x^52 - 743 * x^53 + 998 * x^54 - 637 * x^55 + 446 * x^56 + 558 * x^57 + 692 * x^58 + 904 * x^59 + 660 * x^60 - 529 * x^61 + 93 * x^62 - 184 * x^63 - 565 * x^64 - 780 * x^65 - 469 * x^66 + 797 * x^67 - 304 * x^68 + 886 * x^69 + 441 * x^70 + 91 * x^71 + 683 * x^72 + 109 * x^73 - 109 * x^74 - 748 * x^75 + 133 * x^76 + 28 * x^77 - 200 * x^78 + 414 * x^79 + 293 * x^80 + 275 * x^81 + 241 * x^82 + 26 * x^83 - 852 * x^84 + 328 * x^85 + 53 * x^86 + 377 * x^87 - 561 * x^88 - 569 * x^89 + 62 * x^90 + 780 * x^91 + 544 * x^92 + 72 * x^93 + 205 * x^94 - 903 * x^95
//            866 + 1068 * x^1 + 975 * x^2 - 928 * x^3 + 1890 * x^4 + 2322 * x^5 - 3997 * x^6 + 6456 * x^7 - 2106 * x^8 - 9610 * x^9 + 3949 * x^10 + 2376 * x^11 + 1781 * x^12 - 742 * x^13 - 3375 * x^14 - 13984 * x^15 - 7582 * x^16 + 15714 * x^17 - 18145 * x^18 + 14440 * x^19 - 18018 * x^20 + 21164 * x^21 - 20493 * x^22 - 20040 * x^23 + 1300 * x^24 - 16588 * x^25 + 432 * x^26 - 8316 * x^27 + 21402 * x^28 + 21570 * x^29 + 28086 * x^30 - 11232 * x^31 - 27357 * x^32 + 18734 * x^33 - 29925 * x^34 + 21600 * x^35 + 25382 * x^36 + 22952 * x^37 + 30732 * x^38 - 5440 * x^39 + 26404 * x^40 + 6888 * x^41 - 33153 * x^42 + 32296 * x^43 - 12465 * x^44 + 40710 * x^45 - 9729 * x^46 - 24624 * x^47 + 5488 * x^48 - 10900 * x^49 - 2703 * x^50 - 36868 * x^51 - 39379 * x^52 + 53892 * x^53 - 35035 * x^54 + 24976 * x^55 + 31806 * x^56 + 40136 * x^57 + 53336 * x^58 + 39600 * x^59 - 32269 * x^60 + 5766 * x^61 - 11592 * x^62 - 36160 * x^63 - 50700 * x^64 - 30954 * x^65 + 53399 * x^66 - 20672 * x^67 + 61134 * x^68 + 30870 * x^69 + 6461 * x^70 + 49176 * x^71 + 7957 * x^72 - 8066 * x^73 - 56100 * x^74 + 10108 * x^75 + 2156 * x^76 - 15600 * x^77 + 32706 * x^78 + 23440 * x^79 + 22275 * x^80 + 19762 * x^81 + 2158 * x^82 - 71568 * x^83 + 27880 * x^84 + 4558 * x^85 + 32799 * x^86 - 49368 * x^87 - 50641 * x^88 + 5580 * x^89 + 70980 * x^90 + 50048 * x^91 + 6696 * x^92 + 19270 * x^93 - 85785 * x^94
//            98.36198456877166
//            606893.4447893213
//    ArrayPoly
//    Poly 5:
//            21 - 854 * x^1 + 363 * x^2 + 759 * x^3 + 419 * x^4 + 662 * x^5 + 414 * x^6 - 380 * x^7 + 354 * x^8 - 263 * x^9 + 409 * x^10 - 923 * x^11 + 945 * x^12 - 243 * x^13
//            - 854 + 726 * x^1 + 2277 * x^2 + 1676 * x^3 + 3310 * x^4 + 2484 * x^5 - 2660 * x^6 + 2832 * x^7 - 2367 * x^8 + 4090 * x^9 - 10153 * x^10 + 11340 * x^11 - 3159 * x^12
//            913.8278028279956
//            1760032.3482467197
//    ArrayPoly
//    Poly 6:
//            - 248 + 521 * x^1 - 440 * x^2 + 920 * x^3 + 755 * x^4 + 303 * x^5 - 757 * x^6 + 382 * x^7 + 645 * x^8 + 517 * x^9 - 998 * x^10 - 817 * x^11 + 414 * x^12 - 711 * x^13 + 582 * x^14 + 388 * x^15 - 52 * x^16 + 911 * x^17 - 377 * x^18 + 466 * x^19 + 360 * x^20 - 921 * x^21 - 863 * x^22 - 825 * x^23 - 996 * x^24 + 32 * x^25 + 533 * x^26 - 384 * x^27 + 101 * x^28 + 252 * x^29 + 6 * x^30 + 292 * x^31 - 578 * x^32
//            521 - 880 * x^1 + 2760 * x^2 + 3020 * x^3 + 1515 * x^4 - 4542 * x^5 + 2674 * x^6 + 5160 * x^7 + 4653 * x^8 - 9980 * x^9 - 8987 * x^10 + 4968 * x^11 - 9243 * x^12 + 8148 * x^13 + 5820 * x^14 - 832 * x^15 + 15487 * x^16 - 6786 * x^17 + 8854 * x^18 + 7200 * x^19 - 19341 * x^20 - 18986 * x^21 - 18975 * x^22 - 23904 * x^23 + 800 * x^24 + 13858 * x^25 - 10368 * x^26 + 2828 * x^27 + 7308 * x^28 + 180 * x^29 + 9052 * x^30 - 18496 * x^31
//            798.8896739157873
//            -7190.007065242418
//    ListPoly
//    Poly 7:
//            106 - 338 * x^1 + 255 * x^2 + 851 * x^3 + 880 * x^4 + 130 * x^5 + 248 * x^6 + 133 * x^7 + 423 * x^8 + 708 * x^9 - 476 * x^10
//            - 338 + 510 * x^1 + 2553 * x^2 + 3520 * x^3 + 650 * x^4 + 1488 * x^5 + 931 * x^6 + 3384 * x^7 + 6372 * x^8 - 4760 * x^9
//            535.3736354369909
//            1818128.865944021
//    ListPoly
//    Poly 8:
//            - 900 - 653 * x^1 + 963 * x^2 - 668 * x^3 - 531 * x^4 - 461 * x^5 + 894 * x^6 - 6 * x^7 + 677 * x^8
//            - 653 + 1926 * x^1 - 2004 * x^2 - 2124 * x^3 - 2305 * x^4 + 5364 * x^5 - 42 * x^6 + 5416 * x^7
//            749.1095963685862
//            -1020287.2702540143
//    ListPoly
//    Poly 9:
//            - 931 + 788 * x^1 + 901 * x^2 + 555 * x^3 - 690 * x^4 - 938 * x^5 - 552 * x^6 - 406 * x^7 + 254 * x^8
//            788 + 1802 * x^1 + 1665 * x^2 - 2760 * x^3 - 4690 * x^4 - 3312 * x^5 - 2842 * x^6 + 2032 * x^7
//            714.0460228294323
//            -908980.5870618674
//    ListPoly
//    Poly 10:
//            - 896 + 106 * x^1 - 177 * x^2 - 391 * x^3 + 345 * x^4 + 703 * x^5 - 85 * x^6 - 635 * x^7 - 345 * x^8 + 913 * x^9 + 343 * x^10 - 314 * x^11 + 813 * x^12 + 480 * x^13 + 415 * x^14 + 893 * x^15 - 986 * x^16 + 776 * x^17 + 722 * x^18 - 236 * x^19 - 424 * x^20 + 762 * x^21 + 658 * x^22 - 109 * x^23 - 80 * x^24 + 650 * x^25 + 157 * x^26 - 545 * x^27 + 246 * x^28 + 424 * x^29 - 296 * x^30 - 862 * x^31 + 470 * x^32 - 601 * x^33 - 608 * x^34 - 334 * x^35 + 774 * x^36
//            106 - 354 * x^1 - 1173 * x^2 + 1380 * x^3 + 3515 * x^4 - 510 * x^5 - 4445 * x^6 - 2760 * x^7 + 8217 * x^8 + 3430 * x^9 - 3454 * x^10 + 9756 * x^11 + 6240 * x^12 + 5810 * x^13 + 13395 * x^14 - 15776 * x^15 + 13192 * x^16 + 12996 * x^17 - 4484 * x^18 - 8480 * x^19 + 16002 * x^20 + 14476 * x^21 - 2507 * x^22 - 1920 * x^23 + 16250 * x^24 + 4082 * x^25 - 14715 * x^26 + 6888 * x^27 + 12296 * x^28 - 8880 * x^29 - 26722 * x^30 + 15040 * x^31 - 19833 * x^32 - 20672 * x^33 - 11690 * x^34 + 27864 * x^35
//            614.2310400569544
//            1198978.990191175
//    ListPoly


