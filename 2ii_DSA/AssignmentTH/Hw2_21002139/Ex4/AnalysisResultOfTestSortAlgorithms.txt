Input là mảng đã được sắp xếp sẵn (tức best case của các thuật toán)

I. So sánh với n = 10
[ 0 1 2 3 4 5 6 7 8 9 ]

Test BubbleSort
BubbleSort ran in 3700 nano seconds        
with 0 swap times and 9 comparisons times. 

Test SelectionSort
SelectionSort ran in 8200 nano seconds     
with 0 swap times and 45 comparisons times.

Test InsertionSort
InsertionSort ran in 5000 nano seconds     
with 0 swap times and 9 comparisons times. 

=>  Xét về thời gian chạy: BubbleSort < InsertionSort < SelectionSort
    Xét về số lần đổi chỗ: BubbleSort = InsertionSort = SelectionSort
    Xét về số lần so sánh: BubbleSort = InsertionSort < SelectionSort
=>  Với n = 10 thì BubbleSort tỏ ra là thuật toán có BestCase tốt nhất

**********************************************************************

II. So sánh với n = 20
[ 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ]

Test BubbleSort
BubbleSort ran in 6300 nano seconds
with 0 swap times and 19 comparisons times.

Test SelectionSort
SelectionSort ran in 38800 nano seconds
with 0 swap times and 190 comparisons times.

Test InsertionSort
InsertionSort ran in 8400 nano seconds
with 0 swap times and 19 comparisons times.

=>  Xét về thời gian chạy: BubbleSort < InsertionSort < SelectionSort
    Xét về số lần đổi chỗ: BubbleSort = InsertionSort = SelectionSort
    Xét về số lần so sánh: BubbleSort = InsertionSort < SelectionSort
=>  Với n = 20 thì BubbleSort tỏ ra là thuật toán có BestCase tốt nhất

**********************************************************************

III. So sánh với n = 50
[ 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 ]

Test BubbleSort
BubbleSort ran in 15000 nano seconds
with 0 swap times and 49 comparisons times.

Test SelectionSort
SelectionSort ran in 88500 nano seconds
with 0 swap times and 1225 comparisons times.

Test InsertionSort
InsertionSort ran in 22700 nano seconds
with 0 swap times and 49 comparisons times.

=>  Xét về thời gian chạy: BubbleSort < InsertionSort < SelectionSort
    Xét về số lần đổi chỗ: BubbleSort = InsertionSort = SelectionSort
    Xét về số lần so sánh: BubbleSort = InsertionSort < SelectionSort
=>  Với n = 50 thì BubbleSort tỏ ra là thuật toán có BestCase tốt nhất

**********************************************************************

Kết luận:
    Xét về thời gian chạy: BubbleSort < InsertionSort < SelectionSort
    Xét về số lần đổi chỗ: BubbleSort = InsertionSort = SelectionSort
    Xét về số lần so sánh: BubbleSort = InsertionSort < SelectionSort
Như vậy thì trong trường hợp tốt nhất (mảng đầu vào đã được sắp xếp),
    BubbleSort tỏ ra là thuật toán có BestCase tốt nhất,
    sau đó là InsertionSort,
    cuối cùng là SelectionSort.